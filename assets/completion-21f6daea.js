import{o as C,f as T}from"./openai-25cd8fc5.js";import{f as M,E as R,d as B,e as $,g as J,h as U,a as z}from"./el-col-61dfbaf8.js";import{d as I,b as g,y as N,P as K,Q as b,R as a,a1 as r,w as _,F as A,o as y,au as q,c as H,U as k,V as w,$ as P,a6 as j,a7 as G,a4 as D,a8 as Q,x as W,a9 as X,aa as Y,ab as Z,a3 as x,ac as S,ad as ee,a as v}from"./index-7bab1c5f.js";const O=f=>(j("data-v-8d543230"),f=f(),G(),f),te={class:"context"},ae={class:"panel"},oe={class:"action-list"},se={class:"action-item"},ne={key:0,class:"usage"},le={class:"usage-item"},re=O(()=>a("span",{class:"name"},"参数使用：",-1)),ie={class:"value"},ce={class:"usage-item"},de=O(()=>a("span",{class:"name"},"结果使用：",-1)),me={class:"value"},ue={class:"usage-item"},pe=O(()=>a("span",{class:"name"},"total：",-1)),_e={class:"value"},fe=I({__name:"completionFrame",props:{modelValue:{},actionList:{},usage:{}},emits:["on-act","update:modelValue"],setup(f,{emit:o}){const l=f,i=g("edit"),s=g(l.modelValue);return N(()=>l.modelValue,()=>{s.value=l.modelValue}),N(()=>s.value,()=>{o("update:modelValue",s.value)}),(d,m)=>{const V=K("v-md-editor"),E=R,h=B,e=$,t=J,u=U,p=M;return y(),b(A,null,[a("div",te,[r(V,{class:"content",mode:i.value,modelValue:s.value,"onUpdate:modelValue":m[0]||(m[0]=n=>s.value=n),height:"75vh"},null,8,["mode","modelValue"])]),a("div",ae,[r(p,{shadow:"always","body-style":{padding:"20px"}},{default:_(()=>[r(u,null,{default:_(()=>[r(t,{span:18,offset:0},{default:_(()=>[a("div",oe,[(y(!0),b(A,null,q(d.actionList,n=>(y(),H(E,{class:"action-item",type:"primary",size:"default",onClick:c=>o("on-act",n.key)},{default:_(()=>[k(w(n.name),1)]),_:2},1032,["onClick"]))),256)),a("div",se,[r(e,{modelValue:i.value,"onUpdate:modelValue":m[1]||(m[1]=n=>i.value=n)},{default:_(()=>[r(h,{label:"preview",size:"default"},{default:_(()=>[k("预览")]),_:1}),r(h,{label:"edit",size:"default"},{default:_(()=>[k("编辑")]),_:1}),r(h,{label:"editable",size:"default"},{default:_(()=>[k("编辑预览")]),_:1})]),_:1},8,["modelValue"])])])]),_:1}),r(t,{span:6,offset:0},{default:_(()=>[d.usage?(y(),b("div",ne,[a("div",le,[re,a("span",ie,w(d.usage.prompt_tokens),1)]),a("div",ce,[de,a("span",me,w(d.usage.completion_tokens),1)]),a("div",ue,[pe,a("span",_e,w(d.usage.total_tokens),1)])])):P("",!0)]),_:1})]),_:1})]),_:1})])],64)}}});const ve=D(fe,[["__scopeId","data-v-8d543230"]]),ye=Q("completion-store",()=>{const f=W([{name:"model",key:"model",type:"select",options:[{name:"text-davinci-003",value:"text-davinci-003"},{name:"code-davinci-002",value:"code-davinci-002"},{name:"text-davinci-002",value:"text-davinci-002"}],default:"text-davinci-003"},{name:'生成目标token的可能({"target": -100~100})',key:"logit_bias",type:"textarea",default:"{}"},{name:"是否启用流传输",key:"stream",type:"switch",default:!0},{name:"temperature(默认为1)不建议和top_p一起改",key:"temperature",type:"slider",range:{start:0,end:2,step:.1},default:1},{name:"top_p(默认为1)",key:"top_p",type:"slider",range:{start:0,end:1,step:.1},default:1},{name:"stop",key:"stop",type:"input",default:""},{name:"最大生成令牌数，设置-1表示无限",key:"max_tokens",type:"number",range:{start:-1,end:32e3,step:1},default:-1},{name:"谈论新主题可能性，默认为0",key:"presence_penalty",type:"slider",range:{start:-2,end:2,step:.1},default:0},{name:"重复同样的话的可能。默认为0",key:"frequency_penalty",type:"slider",range:{start:-2,end:2,step:.1},default:0}]),o=[{name:"开始",key:"start"},{name:"清空",key:"clear"}],l=g({});{let e;const t="completionOption";(()=>{const p=localStorage.getItem(t);let n={};p&&(n=JSON.parse(p)),f.forEach(c=>{Object.hasOwn(n,c.key)?l.value[c.key]=n[c.key]:l.value[c.key]=c.default})})(),N(l,()=>{clearTimeout(e),e=setTimeout(()=>{localStorage.setItem(t,JSON.stringify(l.value))},1e3)},{deep:!0})}const i=g(""),s=g(),d=()=>{const e={...l.value};e.max_tokens===-1&&delete e.max_tokens,e.logit_bias=e.logit_bias.trim();let t={};if(e.logit_bias)try{const u=JSON.parse(e.logit_bias);if(u instanceof Array)throw new Error("cant be array");for(let p in u){if(!parseInt(p))throw new Error("key is not a numeric string");if(u[p]instanceof Number)throw new Error("value is not a number")}t=u}catch{x.warning("输入的[生成目标token的可能性格式错误]"),S({message:"生成目标token的可能性应该是一个JSON对象，键是token数，值是可能性（-100~100）"})}return e.logit_bias=t,e.prompt=i.value,e},m=async()=>{const e=X("请稍等");try{return await C.streamApi("completions",{...d()},{apiKey:C.apiKey.value})}catch(t){if(t instanceof Error){if(t instanceof Y)return Z(t);x.error(t.message),S({title:"stream error",message:"如果你想知道确切的原因，最好不要使用流模式",duration:0})}throw t}finally{ee(e)}},V=async e=>{try{const t=e.getReader(),u=new TextDecoder;let p=!0,n="",c;const F=1*60*1e3;do{let L=setTimeout(async()=>{throw t.releaseLock(),await e.cancel("timeout"),new Error("stream read error")},F);c=await t.read(),clearTimeout(L),p=c.done,n="",c.value&&(n=u.decode(c.value)),i.value+=n}while(!p);x.success("done!")}catch(t){if(t instanceof Error&&t.type==="MAX_TOKENS"){x.warning("达到最大token"),S({title:"stream error",message:t.message});return}throw t}},E=async()=>{try{const e=await C.openAiAPi.createCompletion({...d()});i.value+=e.data.choices[0].text||"",s.value=e.data.usage}catch(e){throw e}};return{formData:l,options:f,actionList:o,createCompletion:async()=>{try{if(s.value=void 0,l.value.stream){const e=await m();await V(e)}else await E()}catch(e){throw e}},context:i,usage:s}}),ge={class:"container"},he={class:"option"},ke={class:"frame"},we=I({__name:"completion",setup(f){const o=ye(),l=i=>{switch(i){case"clear":o.context="";break;case"start":o.createCompletion();break}};return(i,s)=>{const d=T;return y(),b("div",ge,[a("div",he,[r(d,{offset:60},{default:_(()=>[r(z,{modelValue:v(o).formData,"onUpdate:modelValue":s[0]||(s[0]=m=>v(o).formData=m),options:v(o).options,title:"选项"},null,8,["modelValue","options"])]),_:1})]),a("div",ke,[r(ve,{modelValue:v(o).context,"onUpdate:modelValue":s[1]||(s[1]=m=>v(o).context=m),"action-list":v(o).actionList,usage:v(o).usage,onOnAct:l},null,8,["modelValue","action-list","usage"])])])}}});const Ee=D(we,[["__scopeId","data-v-08feffbf"]]);export{Ee as default};
